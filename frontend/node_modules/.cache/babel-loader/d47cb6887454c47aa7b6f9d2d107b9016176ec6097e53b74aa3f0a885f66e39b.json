{"ast":null,"code":"var _jsxFileName = \"/Users/rishikeshvijaykumarsawant/Deployed Projects/Wathare proj 2/frontend/src/components/TimelineGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/TimelineGraph.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TimelineGraph = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [time, setTime] = useState([]);\n  const [click, setClick] = useState();\n  const [timeFrame, setTimeFrame] = useState(1); // Default timeframe is 1 hour\n\n  const getData = async () => {\n    try {\n      // Simulate fetching data from a service\n      const response = await fetch('http://localhost:3000/data');\n      const timeStampDataArray = await response.json();\n      setData(timeStampDataArray);\n      const timeArray = timeStampDataArray.map(val => {\n        const date = new Date(val.ts);\n        return {\n          timestamp: date.getTime(),\n          value: val.value\n        };\n      });\n      setTime(timeArray);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const buttonHandler = e => {\n    setClick(e.target.value);\n    setTimeFrame(Number(e.target.value.split(\" \")[0])); // Extracting the numeric part of the clicked timeframe\n  };\n  const renderGraph = () => {\n    if (!time || time.length === 0) return []; // Return empty array if time is undefined or empty\n\n    const intervals = timeFrame * 3600 * 1000; // Converting hours to milliseconds\n    const graphLength = Math.ceil((time[time.length - 1].timestamp - time[0].timestamp) / intervals);\n    const graphData = new Array(graphLength).fill(0).map((val, index) => {\n      const intervalStart = time[0].timestamp + index * intervals;\n      const intervalEnd = intervalStart + intervals;\n      const intervalReadings = time.filter(entry => entry.timestamp >= intervalStart && entry.timestamp < intervalEnd);\n      const averageValue = intervalReadings.length > 0 ? intervalReadings.reduce((sum, entry) => sum + entry.value, 0) / intervalReadings.length : 0;\n      return {\n        timestamp: intervalStart,\n        value: averageValue\n      };\n    });\n    return graphData;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Timeframe\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Timeframe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"button-list\",\n        onClick: buttonHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: \"1 Hr\",\n            className: \"btn btn-secondary\",\n            children: \"1 Hr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: \"8 Hr\",\n            className: \"btn btn-secondary\",\n            children: \"8 Hr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            value: \"24 Hr\",\n            className: \"btn btn-secondary\",\n            children: \"24 Hr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cycle-status\",\n          children: \"Cycle Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), renderGraph().map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-entry\",\n          style: {\n            left: `${index * 0.2}px`,\n            backgroundColor: entry.value === 0 ? 'yellow' : 'green',\n            // Change color based on value\n            height: `${entry.value * 10}px`,\n            // Adjust height based on value\n            width: `${100 / renderGraph().length}%` // Distribute width equally among data points\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TimelineGraph, \"tULRaKnBajxnt7QP0coOHhEo/8E=\");\n_c = TimelineGraph;\nexport default TimelineGraph;\nvar _c;\n$RefreshReg$(_c, \"TimelineGraph\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TimelineGraph","_s","data","setData","time","setTime","click","setClick","timeFrame","setTimeFrame","getData","response","fetch","timeStampDataArray","json","timeArray","map","val","date","Date","ts","timestamp","getTime","value","error","console","buttonHandler","e","target","Number","split","renderGraph","length","intervals","graphLength","Math","ceil","graphData","Array","fill","index","intervalStart","intervalEnd","intervalReadings","filter","entry","averageValue","reduce","sum","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","left","backgroundColor","height","width","_c","$RefreshReg$"],"sources":["/Users/rishikeshvijaykumarsawant/Deployed Projects/Wathare proj 2/frontend/src/components/TimelineGraph.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../css/TimelineGraph.css';\n\nconst TimelineGraph = () => {\n  const [data, setData] = useState([]);\n  const [time, setTime] = useState([]);\n  const [click, setClick] = useState();\n  const [timeFrame, setTimeFrame] = useState(1); // Default timeframe is 1 hour\n\n  const getData = async () => {\n    try {\n      // Simulate fetching data from a service\n      const response = await fetch('http://localhost:3000/data');\n      const timeStampDataArray = await response.json();\n\n      setData(timeStampDataArray);\n\n      const timeArray = timeStampDataArray.map(val => {\n        const date = new Date(val.ts);\n        return {\n          timestamp: date.getTime(),\n          value: val.value\n        };\n      });\n\n      setTime(timeArray);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const buttonHandler = e => {\n    setClick(e.target.value);\n    setTimeFrame(Number(e.target.value.split(\" \")[0])); // Extracting the numeric part of the clicked timeframe\n  };\n\n  const renderGraph = () => {\n    if (!time || time.length === 0) return []; // Return empty array if time is undefined or empty\n\n    const intervals = timeFrame * 3600 * 1000; // Converting hours to milliseconds\n    const graphLength = Math.ceil((time[time.length - 1].timestamp - time[0].timestamp) / intervals);\n\n    const graphData = new Array(graphLength).fill(0).map((val, index) => {\n      const intervalStart = time[0].timestamp + index * intervals;\n      const intervalEnd = intervalStart + intervals;\n      const intervalReadings = time.filter(entry => entry.timestamp >= intervalStart && entry.timestamp < intervalEnd);\n      const averageValue = intervalReadings.length > 0 ? intervalReadings.reduce((sum, entry) => sum + entry.value, 0) / intervalReadings.length : 0;\n      return {\n        timestamp: intervalStart,\n        value: averageValue\n      };\n    });\n\n    return graphData;\n  };\n\n  return (\n    <>\n      <div className=\"button-container\">\n        <div className=\"Timeframe\"><h5>Timeframe</h5></div>\n        <ul className=\"button-list\" onClick={buttonHandler}>\n          <li>\n            <button value=\"1 Hr\" className=\"btn btn-secondary\">\n              1 Hr\n            </button>\n          </li>\n          <li>\n            <button value=\"8 Hr\" className=\"btn btn-secondary\">\n              8 Hr\n            </button>\n          </li>\n          <li>\n            <button value=\"24 Hr\" className=\"btn btn-secondary\">\n              24 Hr\n            </button>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <div className=\"container\">\n          <div className=\"cycle-status\">Cycle Status</div>\n          {renderGraph().map((entry, index) => (\n            <div\n              key={index}\n              className=\"timeline-entry\"\n              style={{\n                left: `${index * 0.2}px`,\n                backgroundColor: entry.value === 0 ? 'yellow' : 'green', // Change color based on value\n                height: `${entry.value * 10}px`, // Adjust height based on value\n                width: `${100 / renderGraph().length}%` // Distribute width equally among data points\n              }}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TimelineGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}