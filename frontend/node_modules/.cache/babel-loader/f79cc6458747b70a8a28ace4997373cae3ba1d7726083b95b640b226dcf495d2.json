{"ast":null,"code":"var _jsxFileName = \"/Users/rishikeshvijaykumarsawant/Deployed Projects/Wathare proj 2/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { XYPlot, HorizontalGridLines, XAxis, YAxis, VerticalRectSeries, DiscreteColorLegend } from 'react-vis';\nimport 'react-vis/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/data');\n      const jsonData = await response.json();\n      setData(jsonData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const formatDataForGraph = () => {\n    return data.map(item => ({\n      x0: new Date(item.ts),\n      x: new Date(item.ts),\n      y: 0,\n      color: item.machine_status === 0 ? 'yellow' : item.machine_status === 1 ? 'green' : 'red'\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gantt Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XYPlot, {\n      xType: \"time\",\n      width: 800,\n      height: 300,\n      children: [/*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        title: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VerticalRectSeries, {\n        data: formatDataForGraph()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiscreteColorLegend, {\n      items: [{\n        title: 'Sample 0',\n        color: 'yellow'\n      }, {\n        title: 'Sample 1',\n        color: 'green'\n      }, {\n        title: 'Missing Sample',\n        color: 'red'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","XYPlot","HorizontalGridLines","XAxis","YAxis","VerticalRectSeries","DiscreteColorLegend","jsxDEV","_jsxDEV","App","_s","data","setData","fetchData","response","fetch","jsonData","json","error","console","formatDataForGraph","map","item","x0","Date","ts","x","y","color","machine_status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","xType","width","height","title","items","_c","$RefreshReg$"],"sources":["/Users/rishikeshvijaykumarsawant/Deployed Projects/Wathare proj 2/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { XYPlot, HorizontalGridLines, XAxis, YAxis, VerticalRectSeries, DiscreteColorLegend } from 'react-vis';\nimport 'react-vis/dist/style.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/data');\n      const jsonData = await response.json();\n      setData(jsonData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const formatDataForGraph = () => {\n    return data.map(item => ({\n      x0: new Date(item.ts),\n      x: new Date(item.ts),\n      y: 0,\n      color: item.machine_status === 0 ? 'yellow' : item.machine_status === 1 ? 'green' : 'red'\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Gantt Chart</h1>\n      <XYPlot xType=\"time\" width={800} height={300}>\n        <HorizontalGridLines />\n        <XAxis title=\"Time\" />\n        <YAxis />\n        <VerticalRectSeries data={formatDataForGraph()} />\n      </XYPlot>\n      <DiscreteColorLegend\n        items={[\n          { title: 'Sample 0', color: 'yellow' },\n          { title: 'Sample 1', color: 'green' },\n          { title: 'Missing Sample', color: 'red' }\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,mBAAmB,EAAEC,KAAK,EAAEC,KAAK,EAAEC,kBAAkB,EAAEC,mBAAmB,QAAQ,WAAW;AAC9G,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC1D,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtCL,OAAO,CAACI,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,OAAOT,IAAI,CAACU,GAAG,CAACC,IAAI,KAAK;MACvBC,EAAE,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAE,CAAC;MACrBC,CAAC,EAAE,IAAIF,IAAI,CAACF,IAAI,CAACG,EAAE,CAAC;MACpBE,CAAC,EAAE,CAAC;MACJC,KAAK,EAAEN,IAAI,CAACO,cAAc,KAAK,CAAC,GAAG,QAAQ,GAAGP,IAAI,CAACO,cAAc,KAAK,CAAC,GAAG,OAAO,GAAG;IACtF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA;MAAAuB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB3B,OAAA,CAACP,MAAM;MAACmC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAAAP,QAAA,gBAC3CvB,OAAA,CAACN,mBAAmB;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvB3B,OAAA,CAACL,KAAK;QAACoC,KAAK,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtB3B,OAAA,CAACJ,KAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACT3B,OAAA,CAACH,kBAAkB;QAACM,IAAI,EAAES,kBAAkB,CAAC;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACT3B,OAAA,CAACF,mBAAmB;MAClBkC,KAAK,EAAE,CACL;QAAED,KAAK,EAAE,UAAU;QAAEX,KAAK,EAAE;MAAS,CAAC,EACtC;QAAEW,KAAK,EAAE,UAAU;QAAEX,KAAK,EAAE;MAAQ,CAAC,EACrC;QAAEW,KAAK,EAAE,gBAAgB;QAAEX,KAAK,EAAE;MAAM,CAAC;IACzC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CA5CQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}