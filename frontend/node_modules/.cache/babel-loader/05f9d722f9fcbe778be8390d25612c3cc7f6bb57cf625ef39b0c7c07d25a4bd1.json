{"ast":null,"code":"var _jsxFileName = \"/Users/rishikeshvijaykumarsawant/Deployed Projects/Wathare proj 2/frontend/src/components/Generated.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Generated = () => {\n  // Function to generate sample data for 24 hours\n  const generateSampleData = () => {\n    const data = [];\n    const labels = [];\n    const startTime = new Date().getTime() - 24 * 60 * 60 * 1000; // 24 hours ago\n\n    for (let i = 0; i < 24; i++) {\n      const timestamp = startTime + i * 60 * 60 * 1000;\n      const machine_status = Math.random() > 0.5 ? 1 : 0;\n      const vibration = Math.floor(Math.random() * (1000 - 100) + 100);\n      labels.push(new Date(timestamp).toLocaleString('en-US', {\n        hour: 'numeric',\n        hour12: true\n      }));\n      data.push({\n        x: timestamp,\n        y: machine_status,\n        vibration\n      });\n    }\n    return {\n      labels,\n      data\n    };\n  };\n\n  // Generate sample data\n  const {\n    labels,\n    data\n  } = generateSampleData();\n\n  // Chart.js data object\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: 'Machine Status',\n      data: data.map(item => item.y),\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }, {\n      label: 'Vibration',\n      data: data.map(item => item.vibration),\n      fill: false,\n      borderColor: 'rgb(255, 99, 132)',\n      tension: 0.1\n    }]\n  };\n\n  // Chart.js options object\n  const chartOptions = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'hour'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Data for 24 Hours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '400px',\n        width: '800px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = Generated;\nexport default Generated;\nvar _c;\n$RefreshReg$(_c, \"Generated\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","Generated","generateSampleData","data","labels","startTime","Date","getTime","i","timestamp","machine_status","Math","random","vibration","floor","push","toLocaleString","hour","hour12","x","y","chartData","datasets","label","map","item","fill","borderColor","tension","chartOptions","scales","type","time","unit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","options","_c","$RefreshReg$"],"sources":["/Users/rishikeshvijaykumarsawant/Deployed Projects/Wathare proj 2/frontend/src/components/Generated.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst Generated = () => {\n  // Function to generate sample data for 24 hours\n  const generateSampleData = () => {\n    const data = [];\n    const labels = [];\n    const startTime = new Date().getTime() - (24 * 60 * 60 * 1000); // 24 hours ago\n\n    for (let i = 0; i < 24; i++) {\n      const timestamp = startTime + (i * 60 * 60 * 1000);\n      const machine_status = Math.random() > 0.5 ? 1 : 0;\n      const vibration = Math.floor(Math.random() * (1000 - 100) + 100);\n      \n      labels.push(new Date(timestamp).toLocaleString('en-US', { hour: 'numeric', hour12: true }));\n      data.push({ x: timestamp, y: machine_status, vibration });\n    }\n\n    return { labels, data };\n  };\n\n  // Generate sample data\n  const { labels, data } = generateSampleData();\n\n  // Chart.js data object\n  const chartData = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Machine Status',\n        data: data.map(item => item.y),\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      },\n      {\n        label: 'Vibration',\n        data: data.map(item => item.vibration),\n        fill: false,\n        borderColor: 'rgb(255, 99, 132)',\n        tension: 0.1\n      }\n    ]\n  };\n\n  // Chart.js options object\n  const chartOptions = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'hour'\n        }\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2>Generated Data for 24 Hours</h2>\n      <div style={{ height: '400px', width: '800px' }}>\n        <Line data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n};\n\nexport default Generated;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}